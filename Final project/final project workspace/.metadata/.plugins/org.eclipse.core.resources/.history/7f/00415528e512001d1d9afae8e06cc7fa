package com.scheduleService.serviceImpl;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.concurrent.ThreadLocalRandom;

import com.orderService.entity.Order;
import com.scheduleService.entity.Schedule;
import com.scheduleService.service.ScheduleService;

public class ScheduleServiceImpl implements ScheduleService {

	@Override
	public void assignVehicle(Order order) {
		String[] vehicleNumbers = { "CEB-6754", "BEG-8905", "CEA-5643", "65-7896", "KK-0958", "PA-4534" };
		int randIdx = ThreadLocalRandom.current().nextInt(vehicleNumbers.length);
		String randomVehicleNo = vehicleNumbers[randIdx];

		Schedule schedule = new Schedule();
		schedule.setVehicleNo(randomVehicleNo);

		LocalDate startDate = LocalDate.now().plusDays(1); 
		long start = startDate.toEpochDay();

		LocalDate endDate = LocalDate.now().plusDays(7);
		long end = endDate.toEpochDay();

		long randomEpochDay = ThreadLocalRandom.current().longs(start, end).findAny().getAsLong();
		LocalDate unFormattedDate = LocalDate.ofEpochDay(randomEpochDay);
		String formattedDate = unFormattedDate.format(DateTimeFormatter.ofPattern("dd-MM-yyyy"));

		schedule.setScheduledAt(formattedDate);
		schedule.setOrderId(order.getId());
		
	}

}
